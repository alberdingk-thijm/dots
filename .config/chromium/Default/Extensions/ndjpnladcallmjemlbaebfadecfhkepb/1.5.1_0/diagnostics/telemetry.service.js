!function(){"use strict";function e(e,t,i,n){var r=[i,n],a=function(i){var n=e.get("$q"),r=e.get("userService"),a=n.defer();Utilities.isUndefinedOrNull(i)&&(i={}),i.pii=[];var s=Utilities.getManifest();s&&(i.appVersion=s.version);var l=BrowserHandler.i18n.getUILanguage();return Utilities.isNotUndefinedOrNull(l)&&(i.language=l),r.getUserType().then(function(e){return e===t.USER_TYPE.NONE?void a.resolve(i):void r.getUserInfo(e,function(e){return Utilities.isUndefinedOrNull(e)?void a.resolve(i):(Utilities.isNotUndefinedOrNull(e.cid)&&(i.cid=e.cid),Utilities.isNotUndefinedOrNull(e.features)&&(i.experimentFeatures=e.features),Utilities.isNotUndefinedOrNull(e.puid)&&i.pii.push({type:t.TELEMETRY.PII_TYPE.IDENTITY,name:"puid",value:e.puid}),void a.resolve(i))})}),a.promise},s=function(){var t=e.get("$q"),i=e.get("storage"),n=t.defer();return i.get("telemetry_enabled").then(function(e){n.resolve(Utilities.isUndefinedOrNull(e)||Utilities.isUndefinedOrNull(e.telemetry_enabled)||e.telemetry_enabled===!0?!0:!1)}),n.promise},l=function(t){var i=e.get("storage");i.set({telemetry_enabled:t})},d={getEnabledSetting:function(){return s()},setEnabledSetting:function(e){if(!Utilities.isBackgroundContext())return void BrowserHandler.runtime.sendMessage({activity:t.ACTIVITY.TELEMETRY.NAME,command:t.TELEMETRY.COMMAND.SET_DISABLED,enabled:e});l(e);for(var i=0;i<r.length;++i)r[i].setEnabledSetting(e)},trackEvent:function(e,n,s){return!angular.isUndefined(e)&&angular.isString(e)?Utilities.isBackgroundContext()?void a(n).then(function(t){for(var n=0;n<r.length;++n){var a=angular.extend({},t);r[n]===i&&delete a.pii,r[n].trackEvent(e,a,s)}}):void BrowserHandler.runtime.sendMessage({activity:t.ACTIVITY.TELEMETRY.NAME,command:t.TELEMETRY.COMMAND.TRACK_EVENT,eventName:e,properties:n,measurements:s}):void 0},trackTrace:function(e,n){return!angular.isUndefined(e)&&angular.isString(e)?Utilities.isBackgroundContext()?void a(n).then(function(t){for(var n=0;n<r.length;++n){var a=angular.extend({},t);r[n]===i&&delete a.pii,r[n].trackTrace(e,a)}}):void BrowserHandler.runtime.sendMessage({activity:t.ACTIVITY.TELEMETRY.NAME,command:t.TELEMETRY.COMMAND.TRACK_TRACE,message:e,properties:n}):void 0}};return d}angular.module("app.diagnostics",[]).service("telemetry",["$injector","constants","applicationInsightsTelemetry","ariaTelemetry",e])}();